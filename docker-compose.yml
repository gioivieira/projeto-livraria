services:
  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    env_file: .env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
  node:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: node-app
    depends_on:
      - postgres
    env_file: .env
    ports:
      - "3003:3003"
    command: >
      sh -c "
        echo 'Aguardando o Postgres iniciar...' &&
        until pg_isready -h postgres -p 5432; do sleep 1; done &&
        npm install &&
        npx ts-node src/database/migrations.ts
        npx ts-node index.ts
      "
#  frontend:
#    build:
#      context: ./frontend
#      dockerfile: Dockerfile
#    container_name: react-app
#    ports:
#      - "3000:3000"
#    depends_on:
#      - node
#    volumes:
#      - ./frontend:/app
#      - /app/node_modules
#    environment:
#      - CHOKIDAR_USEPOLLING=true
  
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    env_file: .env
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - default

volumes:
  postgres_data:
  pgadmin_data:

